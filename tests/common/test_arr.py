# generated by copilot

from cookit.common.arr import SizedList, chunks, flatten


def test_sized_list_init():
    lst = SizedList([1, 2, 3], size=5)
    assert len(lst) == 3
    assert lst.size == 5


def test_sized_list_append():
    lst = SizedList(size=3)
    lst.append(1)
    lst.append(2)
    lst.append(3)
    lst.append(4)
    assert len(lst) == 3
    assert lst == [2, 3, 4]


def test_sized_list_extend():
    lst = SizedList([1, 2], size=4)
    lst.extend([3, 4, 5])
    assert len(lst) == 4
    assert lst == [2, 3, 4, 5]


def test_sized_list_insert():
    lst = SizedList([1, 2, 3], size=4)
    lst.insert(1, 4)
    assert len(lst) == 4
    assert lst == [1, 4, 2, 3]


def test_sized_list_add():
    lst1 = SizedList([1, 2], size=4)
    lst2 = SizedList([3, 4], size=4)
    lst3 = lst1 + lst2
    assert len(lst3) == 4
    assert lst3 == [1, 2, 3, 4]


def test_sized_list_iadd():
    lst = SizedList([1, 2], size=4)
    lst += [3, 4, 5]
    assert len(lst) == 4
    assert lst == [2, 3, 4, 5]


def test_chunks():
    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    assert list(chunks(lst, 3)) == [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    lst2 = [1, 2, 3, 4, 5, 6, 7, 8]
    assert list(chunks(lst2, 3)) == [[1, 2, 3], [4, 5, 6], [7, 8]]


def test_flatten():
    lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    assert flatten(lst) == [1, 2, 3, 4, 5, 6, 7, 8, 9]
